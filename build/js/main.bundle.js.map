{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/js/Services/bluetooth.service.js","assets/js/Services/foreground.service.js","assets/js/Services/notification.service.js","assets/js/Services/screencapture.service.js","assets/js/Services/share.service.js","assets/js/bundles/main.js"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\r\n * @fileoverview Implementation of the Bluetooth Web Api\r\n * @see {@link https://googlechrome.github.io/samples/web-bluetooth/device-info.html}\r\n *\r\n * At the time of writing this API is very unstable and useless.\r\n * Devices show up as unsupported missing their names, and it does not work on mobile.\r\n */\r\n\r\nexport default class BluetoothService {\r\n  constructor() {\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  getAllDevices() {\r\n    if (!('bluetooth' in navigator)) {\r\n      alert('no bluetooth :(')\r\n      return\r\n    }\r\n\r\n    navigator.bluetooth.requestDevice({\r\n      //filters: [],\r\n      acceptAllDevices: true\r\n    })\r\n      .then(devices => {\r\n        console.log(devices);\r\n      })\r\n      .catch(error => console.error(`${error.name} (${error.code}): ${error.message}`))\r\n  }\r\n}\r\n","export default class ForegroundService {\r\n  constructor() {\r\n    document.addEventListener('visibilitychange', event => {\r\n      console.log(event, document.visibilityState);\r\n    });\r\n  }\r\n\r\n  static get isInForeground() {\r\n    return document.visibilityState === \"visible\"\r\n  }\r\n}\r\n","export default class NotificationService {\r\n  /**\r\n   * Show a local notification\r\n   * @param {string} title\r\n   * @param {NotificationOptions} options\r\n   */\r\n  static showNotification(title, options) {\r\n    if (Notification.permission !== 'granted') {\r\n      Notification.requestPermission().then(value => {\r\n        sendNotification(title, options);\r\n      });\r\n    } else {\r\n      sendNotification(title, options);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} title\r\n * @param {NotificationOptions} options\r\n */\r\nfunction sendNotification(title, options) {\r\n  const opts = Object.assign({\r\n    icon: './assets/img/icon-192.png',\r\n    badge: './assets/img/icon-128.png',\r\n    body: \"\",\r\n    vibrate: [200, 100, 200, 100, 200, 100, 200],\r\n    tag: 'test-notification'\r\n  }, options);\r\n\r\n  navigator.serviceWorker.getRegistration().then(function (reg) {\r\n    reg.showNotification(title, opts);\r\n  });\r\n}\r\n","export default class ScreencaptureService {\r\n\r\n}\r\n","export default class ShareService {\r\n    static get hasShare() {\r\n        return (navigator.share) ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Share\r\n     * @param {ShareModel} shareObj\r\n     */\r\n    static share(shareObj) {\r\n        if (this.hasShare) {\r\n            return navigator.share({\r\n                title: shareObj.title,\r\n                text: shareObj.text,\r\n                url: shareObj.url\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport class ShareModel {\r\n    constructor(title, text, url) {\r\n        this.title = title;\r\n        this.text = text;\r\n        this.url = url;\r\n    }\r\n}\r\n","import NotificationService from \"./../Services/notification.service\"\r\nimport ShareService, { ShareModel } from \"./../Services/share.service\"\r\nimport BluetoothService from \"../Services/bluetooth.service\";\r\nimport ForegroundService from \"../Services/foreground.service\";\r\nimport ScreencaptureService from \"../Services/screencapture.service\";\r\n\r\nconst SERVICEWORKER = './service-worker.js';\r\n\r\nclass Main {\r\n  constructor() {\r\n    window.addEventListener('beforeinstallprompt', this.handleInstall.bind(this));\r\n\r\n    if ('serviceworker' in navigator) {\r\n      window.addEventListener('load', this.registerServiceWorker.bind(this));\r\n    }\r\n\r\n    this.state = {\r\n      installPrompt: null,\r\n    };\r\n\r\n    document.querySelector(\"#btnShare\").addEventListener('click', this.handleShareClick.bind(this));\r\n    document.querySelector(\"#btnNotify\").addEventListener('click', this.handleNotifyClick.bind(this));\r\n    document.querySelector(\"#btnBluetooth\").addEventListener('click', this.handleBluetoothClick.bind(this));\r\n    document.querySelector(\"#btnScreencapture\").addEventListener('click', this.handleScreencaptureClick.bind(this));\r\n\r\n    const fg = new ForegroundService();\r\n  }\r\n\r\n  handleInstall(e) {\r\n    console.log('beforeinstallprompt Event fired');\r\n\r\n    e.userChoice.then(function (choiceResult) {\r\n      console.log(choiceResult.outcome);\r\n\r\n      if (choiceResult.outcome === 'dismissed') {\r\n        console.log('User cancelled home screen install');\r\n        alert('ahw :(');\r\n      } else {\r\n        console.log('User added to home screen');\r\n        alert('Yay!');\r\n      }\r\n    });\r\n  }\r\n\r\n  registerServiceWorker() {\r\n    navigator.serviceWorker.register(SERVICEWORKER).then(function (registration) {\r\n      console.log(`ServiceWorker registration successful with scope: ${registration.scope}`);\r\n    }, function (err) {\r\n      console.error(`ServiceWorker registration failed: ${err}`);\r\n    });\r\n  }\r\n\r\n  promptInstall(installPrompt) {\r\n    if (installPrompt === undefined) return false;\r\n\r\n    installPrompt.prompt();\r\n\r\n    installPrompt.userChoice.then(function (choiceResult) {\r\n      console.log(choiceResult.outcome);\r\n\r\n      installPrompt = null;\r\n\r\n      return choiceResult.outcome !== 'dismissed';\r\n    });\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Share button click event\r\n   * @param {Event} event\r\n   */\r\n  handleShareClick(event) {\r\n    ShareService.share(new ShareModel('KappaPride!', 'PWA is Kappa', './'))\r\n  }\r\n\r\n  /**\r\n   * Notify button click event\r\n   * @param {Event} event\r\n   */\r\n  handleNotifyClick(event) {\r\n    NotificationService.showNotification(\"Kappa world!\", {body: \"This notification is a test, so do with it as you will.\"});\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  handleBluetoothClick(event) {\r\n    const service = new BluetoothService();\r\n    // div#listBluetoothDevices\r\n    service.getAllDevices();\r\n  }\r\n\r\n  handleScreencaptureClick(event) {\r\n    navigator.mediaDevices.getDisplayMedia({\r\n      video: {\r\n        cursor: \"never\"\r\n      },\r\n      audio: false\r\n    })\r\n      .then(stream => {\r\n        console.log(stream);\r\n        document.querySelector(\"#vidScreencapture\").srcObject = stream;\r\n      })\r\n      .catch(error => console.log(\"\" + error))\r\n\r\n  }\r\n}\r\n\r\nconst m = new Main();\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}